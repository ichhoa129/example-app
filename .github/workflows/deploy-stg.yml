on:
  push:
    branches:
      - staging

name: "[STG] Deploy image to K8S"

jobs:
  deploy:
    environment: example-app-stg
    name: Deploy App to K8S
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: login to docker registry
        uses: docker/login-action@v3
        with:
          username: ${{secrets.DOCKERHUB_USERNAME}}
          password: ${{secrets.DOCKERHUB_TOKEN}}

      - name: Add SHORT_SHA env property with commit short sha
        run: echo "SHORT_SHA=`echo ${GITHUB_SHA} | cut -c1-6`" >> $GITHUB_ENV

      - name: Build, tag, and push image to DockerHub
        id: build-image
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }} 
        run: |
          # Build a docker container and
          # push it to ECR so that it can
          # be deployed to ECS.
          docker build -t $DOCKERHUB_USERNAME/${{ vars.DOCKERHUB_REPOSITORY }}:${{vars.ENV}}-${SHORT_SHA} -f ./docker/Dockerfile .
          docker push $DOCKERHUB_USERNAME/${{ vars.DOCKERHUB_REPOSITORY }}:${{vars.ENV}}-${SHORT_SHA}
          echo "::set-output name=image::$DOCKERHUB_USERNAME/${{ vars.DOCKERHUB_REPOSITORY }}:${{vars.ENV}}-${SHORT_SHA}"

      - name: Modify value file
        shell: bash
        env:
          version: ${{vars.ENV}}-${SHORT_SHA}
          configRepo: ${{ vars.CONFIG_REPO }}
          gitHubUser: ${{ secrets.GH_USER }}
          branch: ${{ vars.CONFIG_REPO_BRANCH }}
          valueFile: ${{ vars.CONFIG_REPO_VALUE_FILE }}
        run: |
          [[ -d ${configRepo} ]] && rm -r ${configRepo}
          git clone https://github.com/${gitHubUser}/${configRepo}.git --branch ${branch}
          cd ${configRepo}
          git config user.email "cicd@gmail.com"
          git config user.name "cicd"
          sed -i 's|  tag: .*|  tag: '\"${version}\"'|' ${valueFile}
          git add . ; git commit -m "Update to version ${version}";git push https://${{ secrets.GH_TOKEN }}@github.com/${gitHubUser}/${configRepo}.git
          [[ -d ${configRepo} ]] && rm -r ${configRepo}
          echo "::set-output name=version::$version"

  slack-workflow-status:
      if: always()
      name: Post Workflow Status To Slack
      needs:
        - deploy
      runs-on: ubuntu-latest
      permissions:
        actions: 'read'
      steps:
        - name: Post to a Slack channel
          id: slack
          uses: slackapi/slack-github-action@v1.26.0
          with:
            channel-id: ${{ secrets.SLACK_CHANNEL_ID}}
            payload: |
              {
                "text": "GitHub Action build result: ${{ deploy.status }}\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}",
                "blocks": [
                  {
                    "type": "section",
                    "text": {
                      "type": "mrkdwn",
                      "text": "GitHub Action build result: ${{ deploy.status }}\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}"
                    }
                  }
                ]
              }
          env:
            SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}